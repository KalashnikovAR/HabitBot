from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from config import BOT_TOKEN
from database import init_db
import asyncio
import os

bot = os.getenv("BOT_TOKEN")
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
init_db()

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("‚ö° –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Railway!")

# --- –ü—Ä–∏–≤—ã—á–∫–∏ ---
@dp.message(Command("habits"))
async def habits(message: types.Message):
    args = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else ""
    user_id = message.from_user.id

    if not args:
        habits_list = get_habits(user_id)
        if not habits_list:
            await message.answer("–ù–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫. –î–æ–±–∞–≤—å: /habits + –ß–∏—Ç–∞—Ç—å")
        else:
            text = "–¢–≤–æ–∏ –ø—Ä–∏–≤—ã—á–∫–∏:\n" + "\n".join(f"‚Ä¢ {h} (üî• {s} –¥–Ω.)" for h, s in habits_list)
            await message.answer(text)

    elif args.startswith("+"):
        habit = args[1:].strip()
        add_habit(user_id, habit)
        await message.answer(f"–ü—Ä–∏–≤—ã—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {habit}")

    elif args.startswith("-"):
        habit = args[1:].strip()
        delete_habit(user_id, habit)
        await message.answer(f"–ü—Ä–∏–≤—ã—á–∫–∞ —É–¥–∞–ª–µ–Ω–∞: {habit}")

    else:
        streak = complete_habit(user_id, args)
        if streak == -1:
            await message.answer("–£–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è!")
        else:
            await message.answer(f"üî• Streak: {streak} –¥–Ω–µ–π!")


# --- –ó–∞–¥–∞—á–∏ ---
@dp.message(Command("todo"))
async def todo(message: types.Message):
    args = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else ""
    user_id = message.from_user.id

    if not args:
        tasks = get_tasks(user_id)
        if not tasks:
            await message.answer("–ù–µ—Ç –∑–∞–¥–∞—á. –î–æ–±–∞–≤—å: /todo + –ö—É–ø–∏—Ç—å —Ö–ª–µ–±")
        else:
            text = "–¢–≤–æ–∏ –∑–∞–¥–∞—á–∏:\n" + "\n".join(f"{i}. {task}" for i, task in tasks)
            await message.answer(text)

    elif args.startswith("+"):
        task = args[1:].strip()
        add_task(user_id, task)
        await message.answer(f"–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {task}")

    elif args.startswith("-"):
        task_id = args[1:].strip()
        delete_task(user_id, task_id)
        await message.answer(f"–ó–∞–¥–∞—á–∞ {task_id} —É–¥–∞–ª–µ–Ω–∞")

    elif args.startswith("‚úì"):
        task_id = args[1:].strip()
        complete_task(user_id, task_id)
        await message.answer(f"‚úÖ –ó–∞–¥–∞—á–∞ {task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())